spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: account-selling-platform

  datasource:
    url: jdbc:postgresql://localhost:5432/accountselling
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      pool-name: AccountSellingHikariCP
  
  # Flyway configuration for database migrations
  flyway:
    enabled: true
    schemas: account_selling
    baseline-on-migrate: true
    locations: classpath:db/migration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update # Use 'validate' in production
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 25
          order_inserts: true
          order_updates: true
        connection:
          provider_disables_autocommit: false
        generate_statistics: false # Set to true for debugging performance issues

server:
  port: 8080

# JWT Configuration
app:
  jwt:
    secret: dGhpc19pc19hX3NlY3VyZV9zZWNyZXRfa2V5X2Zvcl9qd3RfdG9rZW5zX3RoYXRfaXNfbG9uZ19lbm91Z2g=
    access-token-expiration: 900000    # 15 minutes
    refresh-token-expiration: 604800000 # 7 days


logging:
  level:
    net.logstash.logback: DEBUG
    root: INFO
    com:
      accountselling:
        platform: DEBUG
    org:
      springframework:
        security: INFO
        web: INFO
      hibernate: INFO
  elasticsearch:
    host: 192.168.100.11
    port: 5000
    index: account-selling-logs
  file:
    name: logs/application.json
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{traceId:-},%X{spanId:-}] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{traceId:-},%X{spanId:-}] %-5level %logger{36} - %msg%n"


management:
  server:
    port: 8080
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  metrics:
    enable:
      all: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name}
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    propagation:
      type: w3c
  otlp:
    metrics:
      export:
        enabled: true
        step: 60s
        url: http://192.168.100.11:4318/v1/metrics
    tracing:
      endpoint: http://192.168.100.11:4318/v1/traces


# ... ส่วน springdoc ของคุณเหมือนเดิม ...
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method```


otel:
  exporter:
    otlp:
      endpoint: http://192.168.100.11:4318
  instrumentation:
    logback-appender:
      enabled: true
    jdbc:
      enabled: true
    spring-web:
      enabled: true
    spring-webmvc:
      enabled: true
