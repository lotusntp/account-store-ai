package com.accountselling.platform.model;

import static org.junit.jupiter.api.Assertions.*;

import java.time.LocalDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Test;

class BaseEntityTest {

  // Test implementation of BaseEntity for testing purposes
  private static class TestEntity extends BaseEntity {
    // No additional fields needed for testing
  }

  @Test
  void testBaseEntityCreation() {
    TestEntity entity = new TestEntity();

    // ID should be null initially (will be generated by JPA)
    assertNull(entity.getId());

    // Audit fields should be null initially (will be set by JPA)
    assertNull(entity.getCreatedAt());
    assertNull(entity.getUpdatedAt());
    assertNull(entity.getVersion());
  }

  @Test
  void testBaseEntitySetters() {
    TestEntity entity = new TestEntity();
    UUID testId = UUID.randomUUID();
    LocalDateTime now = LocalDateTime.now();

    entity.setId(testId);
    entity.setCreatedAt(now);
    entity.setUpdatedAt(now);
    entity.setVersion(1L);

    assertEquals(testId, entity.getId());
    assertEquals(now, entity.getCreatedAt());
    assertEquals(now, entity.getUpdatedAt());
    assertEquals(1L, entity.getVersion());
  }

  @Test
  void testEqualsAndHashCode() {
    TestEntity entity1 = new TestEntity();
    TestEntity entity2 = new TestEntity();
    UUID testId = UUID.randomUUID();

    // With Lombok @EqualsAndHashCode(onlyExplicitlyIncluded = true) and only id field included,
    // when both entities have null id, they are considered equal
    assertEquals(entity1, entity2);

    // Set same ID for both entities
    entity1.setId(testId);
    entity2.setId(testId);

    // Entities with same ID should be equal
    assertEquals(entity1, entity2);
    assertEquals(entity1.hashCode(), entity2.hashCode());
  }

  @Test
  void testToString() {
    TestEntity entity = new TestEntity();
    UUID testId = UUID.randomUUID();
    LocalDateTime now = LocalDateTime.now();

    entity.setId(testId);
    entity.setCreatedAt(now);
    entity.setUpdatedAt(now);
    entity.setVersion(1L);

    String toString = entity.toString();

    // Lombok generates toString in format: BaseEntity(field1=value1, field2=value2)
    assertTrue(toString.contains("BaseEntity("));
    assertTrue(toString.contains("id=" + testId.toString()));
    assertTrue(toString.contains("version=1"));
  }
}
